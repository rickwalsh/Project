microbenchmark(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
microbenchmark(mean(DT$pwgtp15,by=DT$SEX))
microbenchmark(DT[,mean(pwgtp15),by=SEX])
microbenchmark(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
microbenchmark(tapply(DT$pwgtp15,DT$SEX,mean))
microbenchmark(sapply(split(DT$pwgtp15,DT$SEX),mean))
microbenchmark(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
microbenchmark(mean(DT$pwgtp15,by=DT$SEX))
microbenchmark(DT[,mean(pwgtp15),by=SEX])
microbenchmark(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
microbenchmark(tapply(DT$pwgtp15,DT$SEX,mean))
microbenchmark(sapply(split(DT$pwgtp15,DT$SEX),mean))
microbenchmark(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
microbenchmark(mean(DT$pwgtp15,by=DT$SEX))
microbenchmark(DT[,mean(pwgtp15),by=SEX])
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
bodyWeight
BodyWeight
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
xyplot(Ozone ~ Wind | factor(Month), data = airquality)
xyplot(weight ~ Time | Diet, BodyWeight)
p <-   xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
install.packages("ggplot2")!
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality1, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality1 = transform(airquality, Month = factor(Month))
airquality
airquality1
qplot(Wind, Ozone, data = airquality1, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
g <- ggplot(movies, aes(votes, rating)) + geom_point()
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
temp
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(temp)
round(ppois(20, lambda = 16.5 * 2) * 100, 1)
unif100mean <- function(unused){
return(mean(runif(100,min=0,max=1)))
}
sd(sapply(1:1000,unif100mean))
round(ppois(10, lambda = 3 * 3) * 100, 1)
ppois(10, lambda = 3 * 3)
ppois(3.3, lambda = 3 * 3)
ppois(10, lambda = 3 )
ppois(10, lambda = 3 * 3 )
ppois(10, lambda = (3 * 3) )
ppois(3, lambda = (3 * 3) )
ppois(11, lambda = (3 * 3) )
ppois(10, lambda = (5 * 3) )
pbinom(3, size = 5, prob = 0.5, lower.tail = FALSE)
qnorm(0.95, mean = 1100, sd = 75 * 0.1)
qnorm(0.95, mean = 1100, sd = 75 * 1)
pt(0.8, 15, lower.tail = FALSE)
mn <- mean(mtcars$mpg);
s <- sd(mtcars$mpg);
z <- qnorm(.05)
mu0 <- mn - z * s / sqrt(nrow(mtcars))
mu0
12- z * 4 / sqrt(100))
z <- qnorm(.05)
12- z * 4 / sqrt(100)
m4<-c(140,138,150,148,135)
m6 <- c(132,135,151,146,130)
p <- t.test(m4, m6, paired = FALSE, alternative="two.sided", var.equal=FALSE)$p.value
p
p <- t.test(m4, m6, paired = TRUE, alternative="two.sided", var.equal=FALSE)$p.value
p
z <- qnorm(.05)
1100 - z * 30 / sqrt(9)
pbinom(2, prob = .5, size = 4, lower.tail = FALSE)
ppois(1787 - 1, lambda = 10, lower.tail = FALSE)
ppois(1787 - 10, lambda = 100, lower.tail = FALSE)
ppois(10, lambda = 17.87, lower.tail = FALSE)
ppois(10, lambda = 17.87, lower.tail = TRUE)
m1 <- 10; m2 <- 11
n1 <- n2 <- 100
s <- 4
se <- s * sqrt(1 / n1 + 1 / n2)
ts <- (m2 - m1) / se
pv <- 2 * pnorm(-abs(ts))
pv
df1 <- 9
df2 <- 9
ss1 <- (1.5)*(1.5)*df1
ss2 <- (1.8)*(1.8)*df2
(ss1 + ss2) / (df1 + df2)
(ss1 + ss2) / (df1 + df2)
sp2<-(ss1 + ss2) / (df1 + df2)
(m1 - m2) / sqrt (((sp2 / df1) + (sp2 / df1)))
T <- (m1 - m2) / sqrt (((sp2 / df1) + (sp2 / df1)))
pt(T,df)
df1 <- 9 - 1
df2 <- 9 - 1
ss1 <- (1.5)*(1.5)*df1
ss2 <- (1.8)*(1.8)*df2
sp2<-(ss1 + ss2) / (df1 + df2)
T <- (m1 - m2) / sqrt (((sp2 / df1) + (sp2 / df1)))
pt(T,df1+df2)
power <- pnorm(10 + qnorm(.95) * .4, mean = 11, sd = .4, lower.tail = FALSE)
power
.01 / .04 * 10
1.645 - 2.5
x <-  1.645 - 2.5
pnorm(x, lower.tail = FALSE)
x <-  1.645 - (.01 / .04 * 10)
pnorm(x, lower.tail = FALSE)
s <- sqrt (100)
x <-  1.645 - (.01 / .04 * s)
pnorm(x, lower.tail = FALSE)
s <- sqrt (200)
x <-  1.645 - (.01 / .04 * s)
pnorm(x, lower.tail = FALSE)
s <- sqrt (120)
x <-  1.645 - (.01 / .04 * s)
pnorm(x, lower.tail = FALSE)
s <- sqrt (130)
x <-  1.645 - (.01 / .04 * s)
pnorm(x, lower.tail = FALSE)
s <- sqrt (132)
x <-  1.645 - (.01 / .04 * s)
pnorm(x, lower.tail = FALSE)
s <- sqrt (133)
x <-  1.645 - (.01 / .04 * s)
pnorm(x, lower.tail = FALSE)
s <- sqrt (134)
s <- sqrt (134)
x <-  1.645 - (.01 / .04 * s)
pnorm(x, lower.tail = FALSE)
s <- sqrt (135)
x <-  1.645 - (.01 / .04 * s)
pnorm(x, lower.tail = FALSE)
s <- sqrt (140)
x <-  1.645 - (.01 / .04 * s)
pnorm(x, lower.tail = FALSE)
ppois(10, lambda = 17.87, lower.tail = TRUE)
m1 <- 44
m2 <- 42.04
n1 <- n2 <- 288
s <- 12
se <- s * sqrt(1 / n1 + 1 / n2)
ts <- (m2 - m1) / se
pv <- 2 * pnorm(-abs(ts))
pv
round(pv,2)
12- z * 4 / sqrt(100)
p <- t.test(m4, m6, paired = TRUE, alternative="two.sided", var.equal=FALSE)$p.value
p
pbinom(2, prob = .5, size = 4, lower.tail = FALSE)
ppois(10, lambda = 17.87, lower.tail = TRUE)
.01 / .04 * 10
x <-  1.645 - 2.5
pnorm(x, lower.tail = FALSE)
m1 <- 44
m2 <- 42.04
n1 <- n2 <- 288
s <- 12
se <- s * sqrt(1 / n1 + 1 / n2)
ts <- (m2 - m1) / se
pv <- 2 * pnorm(-abs(ts))
round(pv,2)
12- z * 4 / sqrt(100)
mn <- mean(mtcars$mpg); s <- sd(mtcars$mpg); z <- qnorm(.05)
mu0 <- mn - z * s / sqrt(nrow(mtcars))
mu0
mu0 <- mn + z * s / sqrt(nrow(mtcars))
mu0
12 - z * 4 / sqrt(100)
12 + z * 4 / sqrt(100)
df1 <- 9 - 1
df2 <- 9 - 1
ss1 <- (1.5)*(1.5)*df1
ss2 <- (1.8)*(1.8)*df2
sp2<-(ss1 + ss2) / (df1 + df2)
T <- (m1 - m2) / sqrt (((sp2 / df1) + (sp2 / df1)))
pt(T,df1+df2)
pt(T,(df1+df2))
1-pt(T,(df1+df2))
df1 <- 9 - 1
df2 <- 9 - 1
ss1 <- (1.5)*(1.5)*df1
ss2 <- (1.8)*(1.8)*df2
sp2<-(ss1 + ss2) / (df1 + df2)
m1 <- -3
m2 <- 1
df1 <- 9 - 1
df2 <- 9 - 1
ss1 <- (1.5)*(1.5)*df1
ss2 <- (1.8)*(1.8)*df2
sp2<-(ss1 + ss2) / (df1 + df2)
T <- (m1 - m2) / sqrt (((sp2 / df1) + (sp2 / df1)))
1-pt(T,(df1+df2))
pt(T,(df1+df2))
m1 <- -3
m2 <- 1
df1 <- 9 - 1
df2 <- 9 - 1
ss1 <- (1.5)*(1.5)*df1
ss2 <- (1.8)*(1.8)*df2
ss1
ss2
sp2<-(ss1 + ss2) / (df1 + df2)
T <- (m1 - m2) / sqrt (((sp2 / df1) + (sp2 / df1)))
T
pt(T,(df1+df2))
T <- (m1 - m2) / sqrt (((sp2 / df1) + (sp2 / df1)))
T
pv <- 2 * pnorm(-abs(T))
round(pv,2)
pv <- 2 * pnorm(-abs(T))
pv
12 - z * 4 / sqrt(100)
z <- qnorm(.05)
12 - z * 4 / sqrt(100)
12 + z * 4 / sqrt(100)
m1 <- -3
m2 <- 1
df1 <- 9 - 1
df2 <- 9 - 1
ss1 <- (1.5)*(1.5)*df1
ss2 <- (1.8)*(1.8)*df2
sp2<-(ss1 + ss2) / (df1 + df2)
T <- (m1 - m2) / sqrt (((sp2 / df1) + (sp2 / df1)))
T
pt(T,(df1+df2))
sp2
pv <- 2 * pnorm(-abs(T))
round(pv,2)
?pt
m1 <- -3
m2 <- 1
df1 <- 9 - 1
df2 <- 9 - 1
ss1 <- (1.5)*(1.5)*df1
ss2 <- (1.8)*(1.8)*df2
ss1
ss2
sp2<-(ss1 + ss2) / (df1 + df2)
sp2
T <- (m1 - m2) / sqrt (((sp2 / df1) + (sp2 / df2)))
T
T <- (m1 - m2) / sqrt (((sp2 / df1) + (sp2 / df2)))
m1 - m2)
m1 - m2
T
T
?qnorm
12 - z * 4 / sqrt(100)
z * 4 / sqrt(100)
- z * 4 / sqrt(100)
z <- qnorm(.1)
12 - z * 4 / sqrt(100)
12 + z * 4 / sqrt(100)
n1 <- 100
n2 <- 100
sp <- sqrt(((n1 - 1) * (1.5)^2 + (n2 - 1) * (1.8)^2)/(n1 + n2 - 2))
md <- m1 - m2
semd <- sp * sqrt(1/n1 + 1/n2)
md + c(-1, 1) * qt(0.975, n1 + n2 - 2) * semd
## [1] -3.3639 0.2039
t.test(x1, x2, paired = FALSE, var.equal = TRUE)$conf
?t.test
md + c(-1, 1) * qt(0.975, n1 + n2 - 2) * semd
semd
m1 <- -3
m2 <- 1
df1 <- 9 - 1
df2 <- 9 - 1
ss1 <- (1.5)*(1.5)*df1
ss2 <- (1.8)*(1.8)*df2
sp2<-(ss1 + ss2) / (df1 + df2)
T <- (m1 - m2) / sqrt (((sp2 / df1) + (sp2 / df2)))
T
n1 <- 9
n2 <- 9
sp <- sqrt(((n1 - 1) * (1.5)^2 + (n2 - 1) * (1.8)^2)/(n1 + n2 - 2))
md <- m1 - m2
semd <- sp * sqrt(1/n1 + 1/n2)
md + c(-1, 1) * qt(0.975, n1 + n2 - 2) * semd
c(-1, 1) * qt(0.975, n1 + n2 - 2) * semd
semd
md + c(-1, 1) * qt(0.95, n1 + n2 - 2) * semd
c(-1, 1) * qt(0.95, n1 + n2 - 2) * semd
md + c(-1, 1) * qt(0.975, n1 + n2 - 2) * semd
sp <- sqrt(((n1 - 1) * (1.5)^2 + (n2 - 1) * (1.8)^2)/(n1 + n2 - 2))
sp
semd <- sp * sqrt(1/n1 + 1/n2)
semd
sp
sp <- sqrt(((n1 - 1) * (1.5)^2 + (n2 - 1) * (1.8)^2)/(n1 + n2 - 2))
md <- m1 - m2
semd <- sp * sqrt(1/n1 + 1/n2)
md + c(-1, 1) * qt(0.975, n1 + n2 - 2) * semd
n1 <- 9
n2 <- 9
sp <- sqrt(((n1 - 1) * (1.5)^2 + (n2 - 1) * (1.8)^2)/(n1 + n2 - 2))
md <- m1 - m2
semd <- sp * sqrt(1/n1 + 1/n2)
semd
md
semd
md + c(-1, 1) * qt(0.975, n1 + n2 - 2) * semd
sp
sp <- sqrt(((n1 - 1) * (1.5)^2 + (n2 - 1) * (1.8)^2)/(n1 + n2 - 2))
sp
semd <- sp * sqrt(1/n1 + 1/n2)
semd
md
md + c(-1, 1) * qt(0.975, n1 + n2 - 2) * semd
qt(0.975, n1 + n2 - 2) * semd
semd
m1 <- 10; m2 <- 11
n1 <- n2 <- 100
s <- 4
se <- s * sqrt(1 / n1 + 1 / n2)
se
ts <- (m2 - m1) / se
ts
pv <- 2 * pnorm(-abs(ts))
pv
n1 <- 9
n2 <- 9
sp <- sqrt(((n1 - 1) * (1.5)^2 + (n2 - 1) * (1.8)^2)/(n1 + n2 - 2))
md <- m1 - m2
semd <- sp * sqrt(1/n1 + 1/n2)
md + c(-1, 1) * qt(0.975, n1 + n2 - 2) * semd
n1 <- 9
n2 <- 9
sp <- sqrt(((n1 - 1) * (1.5)^2 + (n2 - 1) * (1.8)^2)/(n1 + n2 - 2))
md <- m1 - m2
semd <- sp * sqrt(1/n1 + 1/n2)
ts <- (m2 - m1) / semd
pv <- 2 * pnorm(-abs(ts))
pv
ts
semd <- sp * sqrt(1/n1 + 1/n2)
semd
m1 <- -3
m2 <- 1
df1 <- 9 - 1
df2 <- 9 - 1
ss1 <- (1.5)*(1.5)*df1
ss2 <- (1.8)*(1.8)*df2
sp2<-(ss1 + ss2) / (df1 + df2)
T <- (m1 - m2) / sqrt (((sp2 / df1) + (sp2 / df2)))
T
sqrt (((sp2 / df1) + (sp2 / df2)))
?method
?methods
colsUms
colSUms
colSums
lm
install.packages("DDPQuiz3")
install.packages("yhatr")
library(yhatr)
?model.require
model.require
lm
dgamma
predict
colSums
lm
dgamma
predict
colSums
lm
dgamma
predict
colSums
dgamma
lm
mean
colSums
dgamma
lm
mean
colSums
getmethod(dgamma)
getmethods(dgamma)
getS3method(dgamma)
getMethod(dgamma)
methods(dgamma)
methods(dgamma)
methods(lm)
methods(mean)
methods(colSums)
lm
dgamma
predict
colSums
isGeneric('predict')
isGeneric('lm')
isGeneric('dgamma')
isGeneric('predict')
isGeneric('colSums')
isGeneric('mean')
isGeneric('lm')
isGeneric('dgamma')
isGeneric('predict')
isGeneric('colSums')
isGeneric('mean')
methods(dgamma)
methods(lm)
class('lm')
class(lm)
class(lm)
class(dgamma)
class(colSums)
class(mean)
class(predict)
class(lm)
class(dgamma)
class(colSums)
str(lm)
str(dgamma)
str(colSums)
str(mean)
str(predict)
methods(lm)
methods(lm)
methods(dgamma)
methods(colSums)
methods(mean)
methods(predict)
methods(colSums)
methods(mean)
methods(predict)
body(lm)
body(dgamma)
body(colSums)
body(mean)
body(predict)
methods(lm)
methods(dgamma)
methods(colSums)
methods(mean)
body(lm)
body(dgamma)
body(colSums)
body(mean)
body(show)
body(colSums)
methods(dgamma)
body(mean)
body(show)
body(show)
body(colSums)
body(dgamma)
body(lm)
body(show)
publish( repo = "temp-test", username = "rickwalsh")
library(slidify)
author('temp-test')
publish( repo = "temp-test", username = "rickwalsh")
library(slidify)
slidify("index.Rmd")
publish( repo = "temp-test", username = "rickwalsh")
system('which git')
library(slidify)
author('temp-test')
slidify("index.Rmd")
publish( repo = "temp-test", username = "rickwalsh")
publish(".", repo = "temp-test", username = "rickwalsh")
publish(  repo = "temp-test", username = "rickwalsh")
setwd("c://users//rick.walsh//project")
author('temp-test')
slidify("index.Rmd")
publish(  repo = "temp-test", username = "rickwalsh")
